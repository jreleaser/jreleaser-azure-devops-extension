# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Build.BuildID)

trigger: none

parameters:
- name: version
  displayName: Version
  type: string
  default: ''

- name: releaseType
  displayName: releaseType
  type: string
  values:
  - EarlyAccess
  - Release
  

resources:
  - repo: self

pool:
  vmImage: ubuntu-latest

stages:
- stage: Release
  jobs:
  - job: Release
    steps:
    - checkout: self
      persistCredentials: true
      fetchTags: true
      fetchDepth: 0
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'specific'
        project: 'jreleaser-azure-devops-extension'
        definition: '${{ parameters.releaseType }}'
        specificBuildWithTriggering: true
        buildVersionToDownload: 'latest'
        artifactName: 'JReleaserExtension-vsix'
        targetPath: '$(System.DefaultWorkingDirectory)'
    - ${{ if eq(parameters.releaseType, 'EarlyAccess') }}:
      - task: CmdLine@2
        displayName: 'Set Early Access Version'
        inputs:
          script: |
            latest_tag=$(git tag -l --sort=-v:refname | head -n 1)
            if [[ $latest_tag == *"earlyaccess"* ]]; then
              echo "##vso[task.setvariable variable=version]$latest_tag"
              git tag -d $latest_tag && git push --delete origin $latest_tag 
            else
              echo "##vso[task.setvariable variable=version]$(echo $latest_tag | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')-earlyaccess"
            fi
    - task: JReleaserInstaller@0
      inputs:
        version: 'latest'
    - ${{if eq(parameters.releaseType, 'EarlyAccess')}}:
      - task: JReleaserInvoker@0
        env:
          JRELEASER_GITHUB_TOKEN: $(JRELEASER_GITHUB_TOKEN)
          JRELEASER_PROJECT_VERSION: $(version)
          JRELEASER_TAG_NAME: $(version)
          JRELEASER_OVERWRITE: true
        inputs:
          command: 'release'
          arguments: '--prerelease'
    - ${{if eq(parameters.releaseType, 'Release')}}:
      - task: JReleaserInvoker@0
        env:
          JRELEASER_GITHUB_TOKEN: $(JRELEASER_GITHUB_TOKEN)
          JRELEASER_PROJECT_VERSION:  ${{ parameters.version}}
          JRELEASER_TAG_NAME: ${{ parameters.version}}
        inputs:
          command: 'release'
          