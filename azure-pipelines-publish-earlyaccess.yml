# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Build.BuildID)

trigger: none

resources:
  - repo: self

pool:
  vmImage: ubuntu-latest

variables:
  marketplace_publisher: 'jreleaser'
  marketplace_extensionName: 'JReleaser-EarlyAccess'
  marketplace_extensionId: 'jreleaser-azure-devops-extension-earlyaccess'
  marketplace_share_with: 'shblue21'

stages:
- stage: Build
  jobs:
  - job: Build_JReleaser_Installer
    steps:
    - task: Npm@1
      displayName: 'install'
      inputs:
        command: install
        workingDir: $(System.DefaultWorkingDirectory)/tasks/JReleaserInstaller
    - task: Npm@1
      displayName: 'build'
      inputs:
        command: custom
        customCommand: 'run build'
        workingDir: $(System.DefaultWorkingDirectory)/tasks/JReleaserInstaller
    - task: CopyFiles@2
      displayName: 'copy'
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)/tasks/JReleaserInstaller/'
        Contents: |
          **/*
          !**/*.ts
          !Test/**
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: JReleaserInstaller

  - job: Build_JReleaser_Task
    steps:
    - task: Npm@1
      displayName: 'install'
      inputs:
        command: install
        workingDir: $(System.DefaultWorkingDirectory)/tasks/JReleaserTask
    - task: Npm@1
      displayName: 'build'
      inputs:
        command: custom
        customCommand: 'run build'
        workingDir: $(System.DefaultWorkingDirectory)/tasks/JReleaserTask
    - task: CopyFiles@2
      displayName: 'copy'
      inputs:
        sourceFolder: $(System.DefaultWorkingDirectory)/tasks/JReleaserTask/
        contents: |
          **/*
          !**/*.ts
          !Test/**
        targetFolder: $(Build.ArtifactStagingDirectory)
    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: JReleaserTask

  - job: Build_JReleaser_Extension
    dependsOn: ['Build_JReleaser_Installer', 'Build_JReleaser_Task']
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: 'Download JReleaserInstaller'
      inputs:
        artifact: JReleaserInstaller
        path: $(System.DefaultWorkingDirectory)/tasks/JReleaserInstaller
    - task: DownloadPipelineArtifact@2
      displayName: 'Download JReleaserTask'
      inputs:
        artifact: JReleaserTask
        path: $(System.DefaultWorkingDirectory)/tasks/JReleaserTask
    - task: CopyFiles@2
      displayName: 'copy JReleaser Extension'
      inputs:
        contents: |
          **/*
          !**/*.ts
        targetFolder: $(Build.ArtifactStagingDirectory)
        overWrite: true
    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: JReleaserExtension
- stage: Publish_JReleaser_Extension
  dependsOn: ['Build']
  jobs:
  - job: Publish_JReleaser_Extension
    steps:
    - checkout: self
      fetchTags: true
    - task: Bash@3
      displayName: 'get Early Access version'
      inputs:
        targetType: 'inline'
        script: |
          echo "##vso[task.setvariable variable=earlyaccessVer]$(git tag -l --sort=-v:refname | head -n 1 | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')-earlyaccess"
    - task: DownloadPipelineArtifact@2
      displayName: 'Download JReleaserExtension'
      inputs:
        artifact: JReleaserExtension
        path: $(System.DefaultWorkingDirectory)
    - task: TfxInstaller@3
      displayName: 'install tfx-cli'
      inputs:
        version: '0.14.x'
        checkLatest: true
    - task: UnpublishAzureDevOpsExtension@4
      inputs:
        connectTo: 'VsTeam'
        connectedServiceName: 'jreleaser_publish'
        method: 'id'
        publisherId: 'JReleaser'
        extensionId: '$(marketplace_extensionId)'
    - task: PackageAzureDevOpsExtension@4
      inputs:
        rootFolder: '$(System.DefaultWorkingDirectory)'
        patternManifest: 'jreleaser-azure-devops-extension.json'
        outputPath: 'jreleaser-azure-devops-extension.vsix'
        updateTasksVersion: false
        extensionName: '$(marketplace_extensionName)'
        extensionId: '$(marketplace_extensionId)'
        extensionVersion: '$(earlyaccessVer)'
        extensionVisibility: 'private'
        extensionPricing: 'free'
    - task: PublishAzureDevOpsExtension@4
      name: publish
      inputs:
        connectTo: 'VsTeam'
        connectedServiceName: 'jreleaser_publish'
        fileType: 'vsix'
        vsixFile: 'jreleaser-azure-devops-extension.vsix'
        updateTasksVersion: false
        shareWith: '$(marketplace_share_with)'
    - task: InstallAzureDevOpsExtension@4
      displayName: 'Install JReleaser Dev Extension'
      inputs:
        connectedServiceName: 'jreleaser_publish'
        publisherId: 'JReleaser'
        extensionId: '$(marketplace_extensionId)'
        accounts: 'https://dev.azure.com/shblue21'
    - publish: 'jreleaser-azure-devops-extension.vsix'
      artifact: JReleaserExtension-vsix
    # wait for 1 minute to allow the extension to be installed
    # TODO: find a better way to do this
    - task: CmdLine@2
      displayName: 'wait for 1 minute'
      inputs:
        script: 'sleep 60'